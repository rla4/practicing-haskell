{------------------------------------------------------------------------------
 | Functional Programming exercises
 ------------------------------------------------------------------------------}

{------------------------------------------------------------------------------
	concat' function
 ------------------------------------------------------------------------------}

concat' :: [[a]] -> [a]
concat' [] = []
concat' (x:xs) = x ++ concat' xs
	
-- example: concat' ["abc","de","fg"] = "abcdefg"

{------------------------------------------------------------------------------
	reverse' function
 ------------------------------------------------------------------------------}

reverse' :: [a] -> [a]
reverse' [] = []
reverse' (x:xs) = reverse' xs ++ [x]
	
-- example: reverse' "roberta" = "atrebor"